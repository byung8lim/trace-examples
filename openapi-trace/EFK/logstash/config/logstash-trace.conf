input {
  kafka {
    bootstrap_servers => "10.10.50.131:9092,10.10.50.132:9092,10.10.50.133:9092"
    topics => ["tracelog"]
    auto_offset_reset => "latest"
    consumer_threads => 3
    decorate_events => true
    codec => json
  }
}

filter {
  json {
    source => "message"
  }

  ruby {
    code => '
      event.set("[traceId]", event.get("[traceid]"))
      event.set("[spanId]", event.get("[spanid]"))
      event.set("[parentspanId]", event.get("[parentspanid]"))
      event.set("[tracestatus]", event.get("[tracestatus]"))
      event.set("[elaspedTime]", event.get("[duration]").to_i)
      event.set("[api][httpmethod]", event.get("[httpmethod]"))
      event.set("[api][path]", event.get("[api_uri]"))
      event.set("[api][status]", event.get("[status]"))
      event.set("[api][service]", event.get("[service]"))
      event.set("[data]", event.get("[data]"))
      event.set("[api][requestTime]", event.get("[starttime]"))
      event.set("[api][responseTime]", event.get("[endtime]"))
  '
  }
  date {
    match => ["[api][requestTime]", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ","yyyy-MM-dd'T'HH:mm:ssZZ","yyyy-MM-dd'T'HH:mm:ss.SSSZZ","ISO8601"]
    target => "@timestamp"
    timezone => "Asia/Seoul"
  }
  date {
    match => ["[api][requestTime]", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ","yyyy-MM-dd'T'HH:mm:ssZZ","yyyy-MM-dd'T'HH:mm:ss.SSSZZ","ISO8601"]
    target => "[api][requestTime]"
    timezone => "Asia/Seoul"
  }
  date {
    match => ["[api][responseTime]", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ","yyyy-MM-dd'T'HH:mm:ssZZ","yyyy-MM-dd'T'HH:mm:ss.SSSZZ","ISO8601"]
    target => "[api][responseTime]"
    timezone => "Asia/Seoul"
  }
}

output {
  elasticsearch {
    hosts => ["http://10.10.50.131:9200","http://10.10.50.132:9200","http://10.10.50.133:9200"]
    index => "tracelog-%{+YYYY-MM-dd}"
    ssl => false
    #user => "elastic"
    #password => "changeme"
  }
}